// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismicT from "@prismicio/types";
import type * as prismic from "@prismicio/client";

type Simplify<T> = {
  [KeyType in keyof T]: T[KeyType];
};
/** Content for bio documents */
interface BioDocumentData {
  /**
   * title field in *bio*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: bio.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
   *
   */
  title: prismicT.RichTextField;
  /**
   * body field in *bio*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: bio.body
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
   *
   */
  body: prismicT.RichTextField;
  /**
   * image field in *bio*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: bio.image
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/image
   *
   */
  image: prismicT.ImageField<never>;
}
/**
 * bio document from Prismic
 *
 * - **API ID**: `bio`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type BioDocument<Lang extends string = string> =
  prismicT.PrismicDocumentWithoutUID<Simplify<BioDocumentData>, "bio", Lang>;
/** Content for Dektop documents */
interface DektopDocumentData {
  /**
   * background field in *Dektop*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: dektop.background
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/image
   *
   */
  background: prismicT.ImageField<never>;
}
/**
 * Dektop document from Prismic
 *
 * - **API ID**: `dektop`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type DektopDocument<Lang extends string = string> =
  prismicT.PrismicDocumentWithoutUID<
    Simplify<DektopDocumentData>,
    "dektop",
    Lang
  >;
/** Content for music documents */
interface MusicDocumentData {
  /**
   * music field in *music*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: music.music[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/group
   *
   */
  music: prismicT.GroupField<Simplify<MusicDocumentDataMusicItem>>;
}
/**
 * Item in music → music
 *
 */
export interface MusicDocumentDataMusicItem {
  /**
   * title field in *music → music*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: music.music[].title
   * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
   *
   */
  title: prismicT.RichTextField;
  /**
   * link field in *music → music*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: music.music[].link
   * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
   *
   */
  link: prismicT.LinkField;
  /**
   * image field in *music → music*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: music.music[].image
   * - **Documentation**: https://prismic.io/docs/core-concepts/image
   *
   */
  image: prismicT.ImageField<never>;
}
/**
 * music document from Prismic
 *
 * - **API ID**: `music`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type MusicDocument<Lang extends string = string> =
  prismicT.PrismicDocumentWithoutUID<
    Simplify<MusicDocumentData>,
    "music",
    Lang
  >;
/** Content for oraculo documents */
interface OraculoDocumentData {
  /**
   * cartas field in *oraculo*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: oraculo.cartas[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/group
   *
   */
  cartas: prismicT.GroupField<Simplify<OraculoDocumentDataCartasItem>>;
}
/**
 * Item in oraculo → cartas
 *
 */
export interface OraculoDocumentDataCartasItem {
  /**
   * carta field in *oraculo → cartas*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: oraculo.cartas[].carta
   * - **Documentation**: https://prismic.io/docs/core-concepts/image
   *
   */
  carta: prismicT.ImageField<never>;
}
/**
 * oraculo document from Prismic
 *
 * - **API ID**: `oraculo`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type OraculoDocument<Lang extends string = string> =
  prismicT.PrismicDocumentWithoutUID<
    Simplify<OraculoDocumentData>,
    "oraculo",
    Lang
  >;
/** Content for text documents */
interface TextDocumentData {
  /**
   * title field in *text*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: text.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
   *
   */
  title: prismicT.KeyTextField;
  /**
   * body field in *text*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: text.body
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
   *
   */
  body: prismicT.RichTextField;
}
/**
 * text document from Prismic
 *
 * - **API ID**: `text`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type TextDocument<Lang extends string = string> =
  prismicT.PrismicDocumentWithoutUID<Simplify<TextDocumentData>, "text", Lang>;
export type AllDocumentTypes =
  | BioDocument
  | DektopDocument
  | MusicDocument
  | OraculoDocument
  | TextDocument;
declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig
    ): prismic.Client<AllDocumentTypes>;
  }
  namespace Content {
    export type {
      BioDocumentData,
      BioDocument,
      DektopDocumentData,
      DektopDocument,
      MusicDocumentData,
      MusicDocumentDataMusicItem,
      MusicDocument,
      OraculoDocumentData,
      OraculoDocumentDataCartasItem,
      OraculoDocument,
      TextDocumentData,
      TextDocument,
      AllDocumentTypes,
    };
  }
}
